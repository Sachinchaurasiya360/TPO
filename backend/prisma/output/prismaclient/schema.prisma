generator client {
  provider = "prisma-client-js"
  output   = "./output/prismaclient"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserAcademicYear {
  FIRST_YEAR
  SECOND_YEAR
  THIRD_YEAR
  FOURTH_YEAR
}

model User {
  id            String            @id @default(uuid())
  fullName      String
  legalName     String?
  contactNo     String?
  emailId       String            @unique
  password      String
  cgpa          cgpa[]
  studentId     String
  department    String?
  academicYear  UserAcademicYear?
  skills        String[]
  profilePic    String?
  resumeUrl     String?
  isVerified    Boolean           @default(false)
  createdAt     DateTime          @default(now())
  socialProfile String?
  achievements  Achievement[]
  alumni        Alumni?
  internships   Internship[]
}

model cgpa {
  id        String @unique @default(uuid())
  studentId String
  student   User?  @relation(fields: [studentId], references: [id])
  sem1      Float?
  sem2      Float?
  sem3      Float?
  sem4      Float?
  sem5      Float?
  sem6      Float?
  sem7      Float?
  sem8      Float?
}

model Internship {
  id              String    @id @default(uuid())
  studentId       String
  title           String?
  companyName     String?
  roleDescription String
  duration        String?
  startDate       DateTime?
  endDate         DateTime?
  certificateUrl  String?
  isVerified      Boolean   @default(false)
  student         User?     @relation(fields: [studentId], references: [id])
}

model Achievement {
  id              String  @id @default(uuid())
  title           String
  details         String?
  certificateUrl  String
  AchievementTime String?
  studentId       String
  student         User?   @relation(fields: [studentId], references: [id])
}

model Admin {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  contactNo String
  emailId   String @unique
  password  String
}

model Alumni {
  id         String   @id @default(uuid())
  studentId  String   @unique
  placedBy   String
  pastOrg    String[]
  currentOrg String
  package    String
  student    User?    @relation(fields: [studentId], references: [id])
}
